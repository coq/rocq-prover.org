let render () =
Layout.render
~title:"About The Rocq Prover"
~description:"Rocq is a mature, dependently-typed functional programming language and interactive theorem prover. Learn more about its rich history."
~canonical:Url.about @@
<div class="lg:-mt-32 lg:pt-44 intro-section-simple dark:dark-intro-section-simple">
  <div class="container-fluid">
    <div class="text-center w-full lg:w-2/3 m-auto">
      <h1 class="font-bold mb-6 text-title dark:text-dark-title">About The Rocq Prover</h1>
      <div class="flex items-center justify-center lg:flex-nowrap flex-wrap mt-11 lg:space-x-24">
        <div class="w-1/2 lg:w-auto">
          <a
            class="hover:text-primary dark:hover:text-dark-primary hover:bg-primary_25 dark:hover:bg-dark-primary_20 h-28 w-28 rounded-lg inline-block transition-colors"
            href="#strength"
          >
            <%s! Icons.rocq "h-10 w-10 mb-4 m-auto mt-6" %>
            <div class="font-semibold text-lg text-content dark:text-dark-content">In a Nutshell</div>
          </a>
        </div>
        <div class="w-1/2 lg:w-auto">
          <a
            class="hover:text-primary dark:hover:text-dark-primary hover:bg-primary_25 dark:hover:bg-dark-primary_20 h-28 w-28 rounded-lg inline-block transition-colors"
            href="#history"
          >
            <%s! Icons.clock "h-10 w-10 mb-4 m-auto mt-6" %>
            <div class="font-semibold text-lg text-content dark:text-dark-content">History</div>
          </a>
        </div>
        <div class="w-1/2 lg:w-auto">
          <a
            class="hover:text-primary dark:hover:text-dark-primary hover:bg-primary_25 dark:hover:bg-dark-primary_20 h-28 w-28 rounded-lg inline-block transition-colors"
            href="#Name"
          >
            <%s! Icons.quote_icon "h-10 w-10 mb-4 m-auto mt-6" %>
            <div class="font-semibold text-lg text-content dark:text-dark-content">Name</div>
          </a>
        </div>
        <div class="w-1/2 lg:w-auto">
          <a
            class="hover:text-primary dark:hover:text-dark-primary hover:bg-primary_25 dark:hover:bg-dark-primary_20 h-28 w-28 rounded-lg inline-block transition-colors"
            href="#awards"
          >
            <%s! Icons.price_icon "h-10 w-10 mb-4 m-auto mt-6" %>
            <div class="font-semibold text-lg text-content dark:text-dark-content">Awards</div>
          </a>
        </div>
      </div>
    </div>
  </div>
</div>

<div class="bg-background dark:bg-dark-background">
  <div class="py-10 lg:py-28">
    <div class="container-fluid">
      <div class="prose dark:prose-invert lg:prose-lg mx-auto max-w-5xl">
        <h2 id="strength">What is the Rocq Prover?</h2>
        <div class="space-y-10">


          <P> 
            The Rocq Prover implements a high-level program specification and mathematical language called Gallina that is based on an expressive 
            formal language called the Polymorphic, Cumulative Calculus of Inductive Constructions that itself combines both a higher-order logic and a 
            richly-typed functional programming language. Through a vernacular language of commands, the Rocq Prover allows:
          </p>
          <ul>
            <li> to define data structures, functions or predicates, that can be evaluated efficiently;</li>
            <li> to state mathematical theorems and software specifications;</li>
            <li> to interactively develop formal proofs of these theorems;</li>
            <li> to machine-check these proofs by a relatively small certification "kernel";</li>
            <li> to extract certified programs to languages like OCaml, Haskell or Scheme.</li>
          </ul>

          <p>
            As a proof development system, the Rocq Prover provides interactive proof methods, decision and semi-decision algorithms, 
            and a tactic language for letting the user define its own proof methods. 
            Connection with external computer algebra systems or theorem provers is available.
          </p>

          <p>
            As a platform for the formalization of mathematics or the development of programs, 
            the Rocq Prover provides support for high-level notations, implicit contents and other mechanisms for formalization at scale.
          </p>
          <p>
            Read more about the features that make the Rocq Prover unique in the <a href="<%s Url.why %>">Why Rocq?</a> section.
          <h2 id="history">A Brief History</h2>
          <p>
            The Rocq Prover is the result of more than 40 years of research. It started in 1984 from an implementation of the Calculus of Constructions 
            at INRIA-Rocquencourt by Thierry Coquand and Gérard Huet. In 1991, Christine Paulin extended it to the Calculus of Inductive Constructions. 
            All in all, more than 200 people have contributed to the development of Rocq.
          </p>
          <p>
            The <a href="<%s Url.rocq_team None %>">Rocq Team</a> is responsible for the development of
            Rocq and integration of contributions. See <a href="/refman/changes.html">the changelog</a> for a detailed list of contributors in each release of Rocq and <a href="/refman/history.html">the history page in the reference manual</a> for the early history of Rocq.
          </p>
          <p>
            The Rocq Prover is written in OCaml. It is distributed under the <a href="http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html">GNU Lesser General Public Licence Version 2.1 (LGPL)</a>.
          </p>
          <h2 id="Name">An Overview of the Name's Evolution</h2>
          <p>
          The Rocq Prover was formerly known as the Coq Proof Assistant.
          The name "Coq" referenced the Calculus of Constructions (CoC),
          the foundational system it is based on, as well as one of its creators, Thierry Coquand.
          Additionally, it paid homage to the French national symbol, the rooster.
          </p>
          <p>
          The new name, "the Rocq Prover", honors Inria Rocquencourt, the original site where the prover was developed.
          It also alludes to the mythological bird Roc (or Rokh), symbolizing strength and not so disconnected to a rooster.
          Furthermore, the name conveys a sense of solidity, and its unintended connection to music adds a pleasant resonance.
          The new name was chosen by the <a href="<%s Url.rocq_team (Some "core") %>">Core team</a> after a poll of the users, see
          <a href="https://discourse.rocq-prover.org/t/coq-community-survey-2022-results-part-iv-and-itp-paper-announcement/2001#renaming-coq-8">this page</a>
          for a detailed breakdown of the results.
          </p>
          <h2 id="awards">Awards</h2>
          <p>
            In 2013, when the Rocq Prover was known as Coq,
            the <a href="https://awards.acm.org/software-system">ACM Software System Award</a> was given
            to the initial Coq development team (Thierry Coquand, Gérard Huet, Christine Paulin-Mohring, 
            Bruno Barras, Jean-Christophe Filliâtre, Hugo Herbelin, Chet Murthy, Yves Bertot, Pierre Castéran) 
            for their work on the Coq proof assistant.  This is the highest distinction for research software.
          </p>
          <p>
            The same year, the initial Coq development team also received the
            <a href="https://www.sigplan.org/Awards/Software/">ACM SIGPLAN Programming Languages Software Award</a>.
          </p> 
          <p>
            In 2022, the Coq Proof Assistant was awarded the
            <a href="https://www.ouvrirlascience.fr/category/openscience-prices/open-source-software-prices/">Open Science Free Software Award</a>
            (<a href="https://www.ouvrirlascience.fr/category/prix-science-ouverte/prix-logiciel-libre/"><em>prix science ouverte du logiciel libre de la recherche</em></a>)
            in the Scientific and Technical category by the French ministry of higher education and research.
          </p>
        </div>
      </div>
    </div>
  </div>
</div>
